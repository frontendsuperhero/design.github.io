/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

.wrapper {
  max-width: 940px;
  margin: 0 auto;
  padding-left: 60px;
  padding-right: 60px;
}

@font-face {
  font-family: 'OpenSans-Regular';
  src: url('../../fonts/OpenSans/OpenSans-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'PTSans-Bold';
  src: url('../../fonts/PTSans/PTSans-Bold.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

body {
  font-family: 'OpenSans-Regular';
  padding: 0;
  margin: 0;
}

.page__title-h1,
.page__title-h2 {
  font-family: "PTSans-Bold";
  color: #0abb0e;
  text-transform: uppercase;
  line-height: 40px;
  letter-spacing: 1px;
}

.page__title-h1 {
  font-size: 45px;
}

.page__title-h2 {
  font-size: 25px;
}

.page__btn {
  cursor: pointer;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  text-decoration: none;
  border-radius: 5px;
  height: 68px;
  font-size: 20px;
  letter-spacing: 1px;
  line-height: 30px;
  font-family: 'PTSans-Bold';
  text-transform: uppercase;
  border: none;
  color: #ffffff;
  background-color: #7e3cf9;
  border: 1px solid #7e3cf9;
}

.page__btn:hover {
  color: #262626;
  background-color: #ffffff;
  -webkit-transition: all ease-out 0.5s;
  transition: all ease-out 0.5s;
}

.header {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  color: #ffffff;
  -webkit-box-align: center;
          align-items: center;
}

.header-logo {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
}

.header-logo__icon {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px 0px;
  width: 43px;
  height: 41px;
}

.header-logo__text {
  font-family: "PTSans-Bold";
  margin-left: 10px;
  font-size: 25px;
}

.header-social {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
}

.header-social .social {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end;
}

.header-social .social__icon {
  margin: 0 8px;
  border-radius: 2px;
}

.header-social .social__icon:last-child {
  margin-right: 0;
}

.header-social .social__icon_fb,
.header-social .social__icon_tw,
.header-social .social__icon_inst,
.header-social .social__icon_vimeo,
.header-social .social__icon_google {
  -webkit-filter: invert(1);
          filter: invert(1);
}

.header-social .social__icon_fb:hover,
.header-social .social__icon_tw:hover,
.header-social .social__icon_inst:hover,
.header-social .social__icon_vimeo:hover,
.header-social .social__icon_google:hover {
  -webkit-filter: invert(0);
          filter: invert(0);
}

.header-social .social__icon_fb {
  background-image: url(../assets/icons/sprite.png);
  background-position: -51px -51px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_fb:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px 0px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_tw {
  background-image: url(../assets/icons/sprite.png);
  background-position: -52px -80px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_tw:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -78px -80px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_inst {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px -80px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_inst:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -26px -80px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_vimeo {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px 0px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_vimeo:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px -26px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_google {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px -26px;
  width: 16px;
  height: 16px;
}

.header-social .social__icon_google:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px -52px;
  width: 16px;
  height: 16px;
}

.header-social .icon {
  width: 15px;
  height: 15px;
  margin-right: 10px;
  background-color: #fff;
}

.header-social .icon:last-child {
  margin-right: 0px;
}

.header-block {
  position: fixed;
  width: 100%;
  z-index: 2;
}

.banner {
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  background-image: url("../assets/img/bg.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center;
}

.banner-block {
  position: relative;
  color: #fff;
  padding-top: 15px;
}

.banner-block-info {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  font-size: 20px;
  margin-top: 25px;
  font-family: "PTSans-Bold";
}

.banner-block-info div {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  margin: 0 10px;
}

.banner-block-info__icon-celender,
.banner-block-info__icon-mark-map {
  width: 15px;
  height: 15px;
}

.banner-block-info__icon-celender {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px -51px;
  width: 17px;
  height: 19px;
}

.banner-block-info__icon-mark-map {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px -52px;
  width: 12px;
  height: 16px;
}

.banner-block-text {
  margin: 25px auto 35px;
  width: calc(83.33333333333334% - 20px);
}

.banner-block-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  margin-bottom: 50px;
}

.banner-block-btn .page__btn {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(25% - 20px);
}

.banner-block-counter {
  width: calc(58.333333333333336% - 20px);
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto -70px;
  background-color: #ff8a01;
  padding: 25px 50px;
}

.banner-block-counter__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(25% - 20px);
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  border: 2px solid #ffffff;
  border-radius: 10%;
  padding: 25px 0;
}

.banner-block-counter__item_number {
  font-size: 22px;
  font-family: "PTSans-Bold";
}

.banner-block-counter__item_text {
  font-size: 16px;
}

.banner_opacity {
  width: 100%;
  height: 100%;
  position: absolute;
  background-color: rgba(0, 0, 0, 0.5);
}

.debugGrid {
  height: 100vh;
  position: fixed;
  width: 100%;
}

.debugGrid > div {
  height: inherit;
  max-width: 940px;
  margin: 0 auto;
  padding-left: 60px;
  padding-right: 60px;
}

.debugGrid > div > div {
  height: inherit;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.debugGrid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(8.333333333333334% - 20px);
  height: inherit;
  outline: 1px solid #ff0;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  position: fixed;
  right: 0;
  bottom: 0;
  width: 50px;
  height: 50px;
  border: 1px solid #ff0;
  border-radius: 50%;
  z-index: 1;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btnhidden {
  display: none;
}

.debugGrid-btn:before,
.debugGrid-btn:after {
  content: '';
  align-self: center;
  background: #000;
}

.debugGrid-btn:before {
  width: 25px;
  height: 2px;
}

.debugGrid-btncreate:after {
  width: 2px;
  height: 25px;
  position: absolute;
}

.debugGrid__z-index-negative {
  z-index: -1;
}

@media screen and (max-width: 992px) {
  .banner-block-counter {
    width: calc(100% - 20px);
  }

  .banner-block-counter {
    padding: 25px;
  }
}

@media screen and (max-width: 768px) {
  .banner-block-btn {
    flex-wrap: wrap;
  }

  .banner-block-btn .page__btn {
    width: calc(58.333333333333336% - 20px);
  }

  .banner-block-btn .page__btn {
    margin-bottom: 15px;
  }
}

@media screen and (max-width: 576px) {
  .wrapper {
    padding-left: 5px;
    padding-right: 5px;
  }

  .header {
    margin-left: -5px;
    margin-right: -5px;
  }

  .header-logo {
    margin-left: 5px;
    margin-right: 5px;
  }

  .header-social {
    margin-left: 5px;
    margin-right: 5px;
  }

  .banner-block-text {
    width: calc(100% - 10px);
  }

  .banner-block-btn .page__btn {
    margin-left: 5px;
    margin-right: 5px;
  }

  .banner-block-btn .page__btn {
    width: calc(100% - 10px);
  }

  .banner-block-counter {
    display: none;
  }

  .banner-block-counter__item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .debugGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .debugGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .debugGrid > div > div {
    margin-left: -5px;
    margin-right: -5px;
  }

  .debugGrid > div > div > div {
    margin-left: 5px;
    margin-right: 5px;
  }

  .debugGrid > div > div > div {
    width: calc(8.333333333333334% - 10px);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
