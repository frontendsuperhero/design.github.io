@charset "UTF-8";

/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

.wrapper {
  max-width: 940px;
  margin: 0 auto;
  padding-left: 60px;
  padding-right: 60px;
}

@font-face {
  font-family: 'OpenSans-Regular';
  src: url('../../fonts/OpenSans/OpenSans-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'PTSans-Bold';
  src: url('../../fonts/PTSans/PTSans-Bold.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

body {
  font-family: 'OpenSans-Regular';
  padding: 0;
  margin: 0;
}

a,
button {
  cursor: pointer;
}

a:focus,
button:focus {
  outline: none;
}

a {
  text-decoration: none;
  color: inherit;
}

input {
  cursor: text;
}

input:focus {
  outline: none;
}

.page__title-h1,
.page__title-h2 {
  font-family: "PTSans-Bold";
  color: #0abb0e;
  text-transform: uppercase;
  line-height: 40px;
  letter-spacing: 1px;
}

.page__title-h1 {
  font-size: 45px;
}

.page__title-h2 {
  font-size: 25px;
  color: #0abb0e;
}

.page__title-h2_white {
  color: white;
}

.page__btn {
  cursor: pointer;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  text-decoration: none;
  border-radius: 5px;
  height: 68px;
  font-size: 20px;
  letter-spacing: 1px;
  line-height: 30px;
  font-family: 'PTSans-Bold';
  text-transform: uppercase;
  border: none;
  color: #ffffff;
  background-color: #7e3cf9;
  border: 1px solid #7e3cf9;
}

.page__btn:hover {
  color: #262626;
  background-color: #ffffff;
  -webkit-transition: all ease-out 0.5s;
  transition: all ease-out 0.5s;
}

.page__text {
  font-size: 16px;
  line-height: 30px;
  letter-spacing: 1px;
}

.page__text_bold {
  font-family: "PTSans-Bold";
}

.page__form {
  padding: 10px 0;
}

.page__input {
  height: 49px;
  margin: 10px;
  border-radius: 2px;
  border: 1px solid #e5e4e4;
  padding: 10px;
}

.header {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  color: #ffffff;
  -webkit-box-align: center;
          align-items: center;
}

.header-logo {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
}

.header-logo__icon {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px 0px;
  width: 43px;
  height: 41px;
}

.header-logo__text {
  font-family: "PTSans-Bold";
  margin-left: 10px;
  font-size: 25px;
}

.header-social {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
}

.header-social .social {
  -webkit-box-pack: end;
          justify-content: flex-end;
}

.header-social .social__icon {
  -webkit-filter: invert(1);
          filter: invert(1);
}

.header-block {
  position: fixed;
  width: 100%;
  z-index: 2;
}

.banner {
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  background-image: url("../assets/img/bg.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center;
}

.banner-block {
  position: relative;
  color: #fff;
  padding-top: 15px;
}

.banner-block-info {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  font-size: 20px;
  margin-top: 25px;
  font-family: "PTSans-Bold";
}

.banner-block-info div {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  margin: 0 10px;
}

.banner-block-info__icon-celender,
.banner-block-info__icon-mark-map {
  width: 15px;
  height: 15px;
}

.banner-block-info__icon-celender {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px -51px;
  width: 17px;
  height: 19px;
}

.banner-block-info__icon-mark-map {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px -52px;
  width: 12px;
  height: 16px;
}

.banner-block-text {
  margin: 25px auto 35px;
  width: calc(83.33333333333334% - 20px);
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
  -webkit-animation-name: fadeIn;
  animation-name: fadeIn;
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.banner-block-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  margin-bottom: 50px;
}

.banner-block-btn .page__btn {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(25% - 20px);
}

.banner-block-counter {
  width: calc(58.333333333333336% - 20px);
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto -70px;
  background-color: #ff8a01;
  padding: 25px 50px;
}

.banner-block-counter__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(25% - 20px);
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  border: 2px solid #ffffff;
  border-radius: 10%;
  padding: 25px 0;
}

.banner-block-counter__item_number {
  font-size: 22px;
  font-family: "PTSans-Bold";
}

.banner-block-counter__item_text {
  font-size: 16px;
}

.banner_opacity {
  width: 100%;
  height: 100%;
  position: absolute;
  background-color: rgba(0, 0, 0, 0.5);
}

.about-block {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  padding-top: 15%;
}

.about-block__text {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
}

.about-block__text .page__text {
  padding-bottom: 20px;
  color: #666;
}

.about-block__text .page__btn {
  width: calc(50% - 20px);
}

.about-block__info {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  margin-left: calc(8.333333333333334% + 10px);
  width: calc(41.66666666666667% - 20px);
  background-color: #f5f5f5;
}

.about-block-info-contacts {
  padding-top: 40px;
}

.about-block-info-contacts__geo,
.about-block-info-contacts__date,
.about-block-info-contacts__speaker,
.about-block-info-contacts__sponsor {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-align: center;
          align-items: center;
  padding: 0 30px 30px;
}

.about-block-info-contacts__geo::before,
.about-block-info-contacts__date::before,
.about-block-info-contacts__speaker::before,
.about-block-info-contacts__sponsor::before {
  content: "";
  margin: 0 8px 0 0;
}

.about-block-info-contacts__geo-name,
.about-block-info-contacts__date-name,
.about-block-info-contacts__speaker-name,
.about-block-info-contacts__sponsor-name {
  color: #444;
  font-size: 20px;
  letter-spacing: 1px;
  line-height: 30px;
  font-family: "PTSans-Bold";
}

.about-block-info-contacts__geo-name-detail,
.about-block-info-contacts__date-name-detail,
.about-block-info-contacts__speaker-name-detail,
.about-block-info-contacts__sponsor-name-detail {
  font-size: 16px;
  color: #888;
  width: 100%;
  letter-spacing: 1px;
  line-height: 30px;
}

.about-block-info-contacts__geo::before {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px -52px;
  width: 12px;
  height: 16px;
}

.about-block-info-contacts__date::before {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px -51px;
  width: 17px;
  height: 19px;
}

.about-block-info-contacts__speaker::before {
  background-image: url(../assets/icons/sprite.png);
  background-position: -27px -51px;
  width: 14px;
  height: 19px;
}

.about-block-info-contacts__sponsor::before {
  background-image: url(../assets/icons/sprite.png);
  background-position: -53px 0px;
  width: 24px;
  height: 19px;
}

.presentation {
  background-color: #f5f5f5;
  max-height: 543px;
  margin-top: 80px;
  padding-top: 80px;
  overflow: hidden;
  text-align: center;
}

.presentation .page__text {
  width: calc(66.66666666666667% - 20px);
  margin: 0 auto;
  padding: 40px 30px;
  color: #777;
}

.presentation .page__btn {
  width: calc(25% - 20px);
  margin: 0 auto 50px;
}

.presentation .page__img {
  margin-left: 30px;
}

.event {
  padding: 75px 0;
  text-align: center;
}

.event .page__title-h2 {
  margin-bottom: 25px;
}

.event .social__icon {
  -webkit-filter: invert(0.7);
          filter: invert(0.7);
}

.schedule {
  background-color: #f5f5f5;
  max-height: 600px;
  overflow: hidden;
  padding: 75px 0;
  text-align: center;
}

.schedule .page__title-h2 {
  margin-bottom: 50px;
}

.testimonial {
  position: relative;
  padding: 75px 0;
  text-align: center;
}

.testimonial-block {
  position: relative;
}

.testimonial-block .page__title-h2 {
  color: #ffffff;
  padding-top: 75px;
  margin-bottom: 45px;
}

.testimonial-block .page__img {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(16.666666666666668% - 20px);
  margin: 0 auto !important;
  border-radius: 50%;
  overflow: hidden;
}

.testimonial-block .page__text {
  color: #ffffff;
}

.testimonial-block .page__text:last-child {
  width: calc(66.66666666666667% - 20px);
  margin: 0 auto;
}

.testimonial_parallax {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-image: url("../assets/img/bg-3.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 500px;
  background-position: center;
  background-attachment: fixed;
}

.testimonial_opacity {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.offer {
  padding: 75px 0;
}

.offer__title {
  line-height: 40px;
  font-size: 22px;
  letter-spacing: 1px;
  font-weight: 700;
  text-transform: uppercase;
  font-family: "PTSans-Bold";
}

.offer__title .page__link {
  color: #7e3cf9;
  text-transform: capitalize;
  text-decoration: underline;
}

.offer__title .page__link:hover {
  color: black;
}

.callback {
  background-color: #f5f5f5;
}

.callback-block {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.callback-block .page__img {
  margin-left: calc(-12.5% + 10px);
  display: inline-block;
}

.callback-block .page__img img {
  height: 550px;
}

.callback-block__text {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50.833333333333336% - 20px);
  padding: 75px 0 75px 35px;
}

.callback-block__text .page__title-h2 {
  text-transform: capitalize;
  margin-bottom: 10px;
}

.callback-block__text .page__text {
  color: #666666;
}

.callback-block .page__form {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.callback-block .page__form .page__btn {
  border-radius: 0;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(100% - 20px);
}

.callback-block .page__form .page__input,
.callback-block .page__form .select-box {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(50% - 20px);
  margin: 10px;
  border: 1px solid #e5e4e4;
}

.footer {
  padding: 50px 0;
  background-color: #7e3cf9;
}

.footer-block {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: justify;
          justify-content: space-between;
  color: #ffffff;
}

.footer-block .copyright {
  font-size: 14px;
  line-height: 24px;
}

.items-block {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.items-block .item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(25% - 20px);
}

.items-block .item__img {
  border-radius: 100%;
  overflow: hidden;
  max-height: 220px;
}

.items-block .item__img img {
  cursor: pointer;
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1);
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.items-block .item__img img:hover {
  -webkit-transform: scale(1.2);
      -ms-transform: scale(1.2);
          transform: scale(1.2);
}

.items-block .item__name {
  font-size: 20px;
  font-family: "PTSans-Bold";
  letter-spacing: 1px;
  line-height: 30px;
  margin-top: 5px;
  color: #444;
}

.items-block .item__specname {
  font-size: 15px;
  letter-spacing: 1px;
  line-height: 30px;
  color: #888;
  font-weight: 400;
  margin-bottom: 8px;
}

.social {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
}

.social__icon {
  margin: 0 8px;
  border-radius: 2px;
}

.social__icon:last-child {
  margin-right: 0;
}

.social__icon_fb,
.social__icon_tw,
.social__icon_inst,
.social__icon_vimeo,
.social__icon_google {
  -webkit-filter: invert(1);
          filter: invert(1);
}

.social__icon_fb:hover,
.social__icon_tw:hover,
.social__icon_inst:hover,
.social__icon_vimeo:hover,
.social__icon_google:hover {
  -webkit-filter: invert(0);
          filter: invert(0);
}

.social__icon_fb {
  background-image: url(../assets/icons/sprite.png);
  background-position: -51px -51px;
  width: 16px;
  height: 16px;
}

.social__icon_fb:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px 0px;
  width: 16px;
  height: 16px;
}

.social__icon_tw {
  background-image: url(../assets/icons/sprite.png);
  background-position: -52px -80px;
  width: 16px;
  height: 16px;
}

.social__icon_tw:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -78px -80px;
  width: 16px;
  height: 16px;
}

.social__icon_inst {
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px -80px;
  width: 16px;
  height: 16px;
}

.social__icon_inst:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -26px -80px;
  width: 16px;
  height: 16px;
}

.social__icon_vimeo {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px 0px;
  width: 16px;
  height: 16px;
}

.social__icon_vimeo:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -113px -26px;
  width: 16px;
  height: 16px;
}

.social__icon_google {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px -26px;
  width: 16px;
  height: 16px;
}

.social__icon_google:hover {
  background-image: url(../assets/icons/sprite.png);
  background-position: -87px -52px;
  width: 16px;
  height: 16px;
}

/* Tabs*/

.tab {
  /*Tab Content */
}

.tab-link.is-active {
  color: #f6d667;
}

.tab-nav {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  -webkit-box-pack: center;
          justify-content: center;
}

.tab-nav .page__btn {
  margin: 0 10px;
  height: 50px;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(16.666666666666668% - 20px);
  text-transform: capitalize;
}

.tab-content {
  display: none;
}

.tab-content.is-active {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  padding-top: 25px;
}

.tab-content .item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(41.66666666666667% - 20px);
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  font-family: "PTSans-Bold";
  padding: 15px 0;
}

.tab-content .item::after,
.tab-content .item::before {
  content: '';
  display: inline-block;
  position: absolute;
}

.tab-content .item:nth-child(odd) {
  -webkit-box-align: start;
          align-items: flex-start;
  align-self: flex-end;
}

.tab-content .item:nth-child(odd)::before {
  width: 1px;
  height: 100%;
  background-color: #888;
  top: 0;
  left: -91px;
}

.tab-content .item:nth-child(odd)::after {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: #ffffff;
  left: -100px;
  border: 4px solid #7e3cf9;
  z-index: 1;
}

.tab-content .item:nth-child(even) {
  -webkit-box-align: end;
          align-items: flex-end;
  align-self: flex-start;
}

.tab-content .item:nth-child(even)::after {
  width: 1px;
  height: 100%;
  background-color: #888;
  top: 0;
  right: -90px;
}

.tab-content .item:nth-child(even)::before {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: #ffffff;
  right: -100px;
  border: 4px solid #7e3cf9;
  z-index: 1;
}

.tab-content .item__time {
  font-size: 20px;
  letter-spacing: 1px;
  line-height: 30px;
  color: #7e3cf9;
  font-weight: 700;
}

.tab-content .item__info-detail {
  color: #666;
}

.select-box {
  position: relative;
  display: block;
  width: 100%;
  margin: 0 auto;
  font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
  font-size: 18px;
  color: #60666d;
}

.select-box__current {
  position: relative;
  box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);
  cursor: pointer;
  outline: none;
}

.select-box__current:focus + .select-box__list {
  opacity: 1;
  -webkit-animation-name: none;
          animation-name: none;
}

.select-box__current:focus + .select-box__list .select-box__option {
  cursor: pointer;
}

.select-box__current:focus .select-box__icon {
  -webkit-transform: translateY(-50%) rotate(180deg);
      -ms-transform: translateY(-50%) rotate(180deg);
          transform: translateY(-50%) rotate(180deg);
}

.select-box__icon {
  position: absolute;
  top: 50%;
  right: 15px;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  opacity: 0.3;
  -webkit-transition: 0.2s ease;
  transition: 0.2s ease;
  background-image: url("../assets/img/img-arrow-down.png");
  width: 15px;
  height: 20px;
  background-position: -10px 0px;
  background-size: cover;
  background-repeat: no-repeat;
}

.select-box__value {
  display: -webkit-box;
  display: flex;
}

.select-box__input {
  display: none;
}

.select-box__input:checked + .select-box__input-text {
  display: block;
}

.select-box__input-text {
  display: none;
  width: 100%;
  margin: 0;
  padding: 10px;
  background-color: #fff;
}

.select-box__list {
  position: absolute;
  width: 100%;
  padding: 0;
  list-style: none;
  opacity: 0;
  -webkit-animation-name: HideList;
          animation-name: HideList;
  -webkit-animation-duration: 0.5s;
          animation-duration: 0.5s;
  -webkit-animation-delay: 0.5s;
          animation-delay: 0.5s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-timing-function: step-start;
          animation-timing-function: step-start;
  box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);
}

.select-box__option {
  display: block;
  padding: 15px;
  background-color: #fff;
}

.select-box__option:hover,
.select-box__option:focus {
  color: #546c84;
  background-color: #fbfbfb;
}

@-webkit-keyframes HideList {
  from {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }

  to {
    -webkit-transform: scaleY(0);
            transform: scaleY(0);
  }
}

@keyframes HideList {
  from {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }

  to {
    -webkit-transform: scaleY(0);
            transform: scaleY(0);
  }
}

.debugGrid {
  height: 100vh;
  position: fixed;
  width: 100%;
}

.debugGrid > div {
  height: inherit;
  max-width: 940px;
  margin: 0 auto;
  padding-left: 60px;
  padding-right: 60px;
}

.debugGrid > div > div {
  height: inherit;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.debugGrid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 10px;
  margin-right: 10px;
  width: calc(8.333333333333334% - 20px);
  height: inherit;
  outline: 1px solid #ff0;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  position: fixed;
  right: 0;
  bottom: 0;
  width: 50px;
  height: 50px;
  border: 1px solid #ff0;
  border-radius: 50%;
  z-index: 1;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btnhidden {
  display: none;
}

.debugGrid-btn:before,
.debugGrid-btn:after {
  content: '';
  align-self: center;
  background: #000;
}

.debugGrid-btn:before {
  width: 25px;
  height: 2px;
}

.debugGrid-btncreate:after {
  width: 2px;
  height: 25px;
  position: absolute;
}

.debugGrid__z-index-negative {
  z-index: -1;
}

@media (min-width: 768px) {
  .select-box {
    width: 70%;
  }
}

@media (min-width: 992px) {
  .select-box {
    width: 50%;
  }
}

@media (min-width: 1200px) {
  .select-box {
    width: 30%;
  }
}

@media screen and (max-width: 1024px) {
  .callback-block .page__img {
    margin-left: calc(-20.833333333333336% + 10px);
  }

  .callback-block__text {
    width: calc(54.16666666666667% - 20px);
  }

  .tab-content .item {
    width: calc(100% - 20px);
  }

  .tab-content .item::after,
  .tab-content .item::before {
    top: -5px;
  }

  .tab-content .item:nth-child(odd) {
    -webkit-box-align: center;
            align-items: center;
    align-self: flex-start;
  }

  .tab-content .item:nth-child(odd)::before {
    left: auto;
    opacity: 0.5;
  }

  .tab-content .item:nth-child(odd)::after {
    left: auto;
  }

  .tab-content .item:nth-child(even) {
    -webkit-box-align: center;
            align-items: center;
    align-self: flex-start;
  }

  .tab-content .item:nth-child(even)::after {
    right: auto;
    opacity: 0.5;
  }

  .tab-content .item:nth-child(even)::before {
    right: auto;
  }

  .tab-content .item:last-child::after {
    display: none;
  }
}

@media screen and (max-width: 992px) {
  .banner-block-counter {
    width: calc(100% - 20px);
  }

  .banner-block-counter {
    padding: 25px;
  }

  .about-block__text {
    width: calc(100% - 20px);
  }

  .about-block__text {
    text-align: center;
    margin-bottom: 20px;
  }

  .about-block__text .page__btn {
    margin: 0 auto;
  }

  .about-block__info {
    margin-left: calc(0% + 10px);
  }

  .about-block__info {
    width: calc(100% - 20px);
  }

  .about-block-info-contacts__geo,
  .about-block-info-contacts__date,
  .about-block-info-contacts__speaker,
  .about-block-info-contacts__sponsor {
    -webkit-box-pack: center;
            justify-content: center;
    text-align: center;
  }

  .offer__title {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
    text-align: center;
  }

  .callback-block .page__img {
    display: none;
  }

  .callback-block__text {
    width: calc(100% - 20px);
  }

  .callback-block__text {
    padding-left: 0;
    text-align: center;
  }

  .items-block .item {
    width: calc(50% - 20px);
  }

  .items-block .item {
    margin-bottom: 15px;
  }

  .tab-nav .page__btn {
    width: calc(25% - 20px);
  }
}

@media screen and (max-width: 768px) {
  .banner-block-btn {
    flex-wrap: wrap;
  }

  .banner-block-btn .page__btn {
    width: calc(58.333333333333336% - 20px);
  }

  .banner-block-btn .page__btn {
    margin-bottom: 15px;
  }

  .items-block .item {
    width: calc(100% - 20px);
  }
}

@media screen and (max-width: 576px) {
  .wrapper {
    padding-left: 5px;
    padding-right: 5px;
  }

  .header {
    margin-left: -5px;
    margin-right: -5px;
  }

  .header-logo {
    margin-left: 5px;
    margin-right: 5px;
  }

  .header-social {
    margin-left: 5px;
    margin-right: 5px;
  }

  .banner-block-text {
    width: calc(100% - 10px);
  }

  .banner-block-btn .page__btn {
    margin-left: 5px;
    margin-right: 5px;
  }

  .banner-block-btn .page__btn {
    width: calc(100% - 10px);
  }

  .banner-block-counter {
    display: none;
  }

  .banner-block-counter__item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .about-block {
    margin-left: -5px;
    margin-right: -5px;
  }

  .about-block__text {
    margin-left: 5px;
    margin-right: 5px;
  }

  .about-block__text .page__btn {
    width: calc(100% - 10px);
  }

  .about-block__info {
    margin-left: 5px;
    margin-right: 5px;
  }

  .presentation .page__text {
    width: calc(100% - 10px);
  }

  .presentation .page__text {
    padding: 20px 0;
  }

  .presentation .page__btn {
    width: calc(100% - 10px);
  }

  .presentation .page__img {
    display: none;
  }

  .testimonial-block .page__img {
    margin-left: 5px;
    margin-right: 5px;
  }

  .testimonial-block .page__img {
    width: calc(41.66666666666667% - 10px);
  }

  .callback-block {
    margin-left: -5px;
    margin-right: -5px;
  }

  .callback-block__text {
    margin-left: 5px;
    margin-right: 5px;
  }

  .callback-block .page__form {
    margin-left: -5px;
    margin-right: -5px;
  }

  .callback-block .page__form .page__btn {
    margin-left: 5px;
    margin-right: 5px;
  }

  .callback-block .page__form .page__input,
  .callback-block .page__form .select-box {
    margin-left: 5px;
    margin-right: 5px;
  }

  .callback-block .page__form .page__input,
  .callback-block .page__form .select-box {
    width: calc(100% - 10px);
  }

  .footer-block {
    flex-wrap: wrap;
    -webkit-box-pack: center;
            justify-content: center;
  }

  .footer-block .copyright {
    -webkit-box-ordinal-group: 2;
            order: 1;
  }

  .footer-block .social {
    -webkit-box-ordinal-group: 1;
            order: 0;
    margin-bottom: 20px;
  }

  .items-block {
    margin-left: -5px;
    margin-right: -5px;
  }

  .items-block .item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .tab-nav {
    margin-left: -5px;
    margin-right: -5px;
  }

  .tab-nav .page__btn {
    margin-left: 5px;
    margin-right: 5px;
  }

  .tab-nav .page__btn {
    width: calc(33.333333333333336% - 10px);
  }

  .tab-content.is-active {
    margin-left: -5px;
    margin-right: -5px;
  }

  .tab-content .item {
    margin-left: 5px;
    margin-right: 5px;
  }

  .debugGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .debugGrid > div {
    padding-left: 5px;
    padding-right: 5px;
  }

  .debugGrid > div > div {
    margin-left: -5px;
    margin-right: -5px;
  }

  .debugGrid > div > div > div {
    margin-left: 5px;
    margin-right: 5px;
  }

  .debugGrid > div > div > div {
    width: calc(8.333333333333334% - 10px);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
